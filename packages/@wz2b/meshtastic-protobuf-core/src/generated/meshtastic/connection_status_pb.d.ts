// @generated by protoc-gen-es v2.2.5 with parameter "target=js+dts,import_extension=js"
// @generated from file meshtastic/connection_status.proto (package meshtastic, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file meshtastic/connection_status.proto.
 */
export declare const file_meshtastic_connection_status: GenFile;

/**
 * @generated from message meshtastic.DeviceConnectionStatus
 */
export declare type DeviceConnectionStatus = Message<"meshtastic.DeviceConnectionStatus"> & {
  /**
   *
   * WiFi Status
   *
   * @generated from field: optional meshtastic.WifiConnectionStatus wifi = 1;
   */
  wifi?: WifiConnectionStatus;

  /**
   *
   * WiFi Status
   *
   * @generated from field: optional meshtastic.EthernetConnectionStatus ethernet = 2;
   */
  ethernet?: EthernetConnectionStatus;

  /**
   *
   * Bluetooth Status
   *
   * @generated from field: optional meshtastic.BluetoothConnectionStatus bluetooth = 3;
   */
  bluetooth?: BluetoothConnectionStatus;

  /**
   *
   * Serial Status
   *
   * @generated from field: optional meshtastic.SerialConnectionStatus serial = 4;
   */
  serial?: SerialConnectionStatus;
};

/**
 * Describes the message meshtastic.DeviceConnectionStatus.
 * Use `create(DeviceConnectionStatusSchema)` to create a new message.
 */
export declare const DeviceConnectionStatusSchema: GenMessage<DeviceConnectionStatus>;

/**
 *
 * WiFi connection status
 *
 * @generated from message meshtastic.WifiConnectionStatus
 */
export declare type WifiConnectionStatus = Message<"meshtastic.WifiConnectionStatus"> & {
  /**
   *
   * Connection status
   *
   * @generated from field: meshtastic.NetworkConnectionStatus status = 1;
   */
  status?: NetworkConnectionStatus;

  /**
   *
   * WiFi access point SSID
   *
   * @generated from field: string ssid = 2;
   */
  ssid: string;

  /**
   *
   * RSSI of wireless connection
   *
   * @generated from field: int32 rssi = 3;
   */
  rssi: number;
};

/**
 * Describes the message meshtastic.WifiConnectionStatus.
 * Use `create(WifiConnectionStatusSchema)` to create a new message.
 */
export declare const WifiConnectionStatusSchema: GenMessage<WifiConnectionStatus>;

/**
 *
 * Ethernet connection status
 *
 * @generated from message meshtastic.EthernetConnectionStatus
 */
export declare type EthernetConnectionStatus = Message<"meshtastic.EthernetConnectionStatus"> & {
  /**
   *
   * Connection status
   *
   * @generated from field: meshtastic.NetworkConnectionStatus status = 1;
   */
  status?: NetworkConnectionStatus;
};

/**
 * Describes the message meshtastic.EthernetConnectionStatus.
 * Use `create(EthernetConnectionStatusSchema)` to create a new message.
 */
export declare const EthernetConnectionStatusSchema: GenMessage<EthernetConnectionStatus>;

/**
 *
 * Ethernet or WiFi connection status
 *
 * @generated from message meshtastic.NetworkConnectionStatus
 */
export declare type NetworkConnectionStatus = Message<"meshtastic.NetworkConnectionStatus"> & {
  /**
   *
   * IP address of device
   *
   * @generated from field: fixed32 ip_address = 1;
   */
  ipAddress: number;

  /**
   *
   * Whether the device has an active connection or not
   *
   * @generated from field: bool is_connected = 2;
   */
  isConnected: boolean;

  /**
   *
   * Whether the device has an active connection to an MQTT broker or not
   *
   * @generated from field: bool is_mqtt_connected = 3;
   */
  isMqttConnected: boolean;

  /**
   *
   * Whether the device is actively remote syslogging or not
   *
   * @generated from field: bool is_syslog_connected = 4;
   */
  isSyslogConnected: boolean;
};

/**
 * Describes the message meshtastic.NetworkConnectionStatus.
 * Use `create(NetworkConnectionStatusSchema)` to create a new message.
 */
export declare const NetworkConnectionStatusSchema: GenMessage<NetworkConnectionStatus>;

/**
 *
 * Bluetooth connection status
 *
 * @generated from message meshtastic.BluetoothConnectionStatus
 */
export declare type BluetoothConnectionStatus = Message<"meshtastic.BluetoothConnectionStatus"> & {
  /**
   *
   * The pairing PIN for bluetooth
   *
   * @generated from field: uint32 pin = 1;
   */
  pin: number;

  /**
   *
   * RSSI of bluetooth connection
   *
   * @generated from field: int32 rssi = 2;
   */
  rssi: number;

  /**
   *
   * Whether the device has an active connection or not
   *
   * @generated from field: bool is_connected = 3;
   */
  isConnected: boolean;
};

/**
 * Describes the message meshtastic.BluetoothConnectionStatus.
 * Use `create(BluetoothConnectionStatusSchema)` to create a new message.
 */
export declare const BluetoothConnectionStatusSchema: GenMessage<BluetoothConnectionStatus>;

/**
 *
 * Serial connection status
 *
 * @generated from message meshtastic.SerialConnectionStatus
 */
export declare type SerialConnectionStatus = Message<"meshtastic.SerialConnectionStatus"> & {
  /**
   *
   * Serial baud rate
   *
   * @generated from field: uint32 baud = 1;
   */
  baud: number;

  /**
   *
   * Whether the device has an active connection or not
   *
   * @generated from field: bool is_connected = 2;
   */
  isConnected: boolean;
};

/**
 * Describes the message meshtastic.SerialConnectionStatus.
 * Use `create(SerialConnectionStatusSchema)` to create a new message.
 */
export declare const SerialConnectionStatusSchema: GenMessage<SerialConnectionStatus>;

